import 'GridPosition.dart';
import 'ITile.dart';
import 'TileSize.dart';

List<String> appData = [
  "ranch",
  "shelter",
  "page",
  "arrange",
  "leave",
  "surprise",
  "pile",
  "member",
  "recently",
  "mark",
  "lot",
  "care",
  "teach",
  "west",
  "understanding",
  "friendly",
  "nation",
  "labor",
  "enough",
  "secret",
  "grown",
  "hurry",
  "organization",
  "thee",
  "monkey",
  "children",
  "name",
  "final",
  "whole",
  "telephone",
  "headed",
  "western",
  "best",
  "forgotten",
  "call",
  "judge",
  "interior",
  "pale",
  "refused",
  "dollar",
  "or",
  "prize",
  "amount",
  "heart",
  "friendly",
  "cold",
  "paragraph",
  "garden",
  "along",
  "break",
  "owner",
  "trouble",
  "swimming",
  "want",
  "led",
  "electric",
  "these",
  "slept",
  "occur",
  "might",
  "figure",
  "draw",
  "design",
  "life",
  "smooth",
  "party",
  "treated",
  "dust",
  "stretch",
  "average",
  "interest",
  "similar",
  "after",
  "zero",
  "crowd",
  "repeat",
  "invented",
  "manufacturing",
  "pie",
  "vote",
  "bent",
  "sky",
  "keep",
  "special",
  "thought",
  "weather",
  "range",
  "couple",
  "other",
  "massage",
  "world",
  "collect",
  "show",
  "compass",
  "wrong",
  "raise",
  "somebody",
  "rise",
  "bat",
  "hole"
];

const List<String> alphabetical = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "H",
  "I",
  "J",
  "K",
  "L",
  "M",
  "N",
  "O",
  "P",
  "Q",
  "R",
  "S",
  "T",
  "U",
  "V",
  "W",
  "X",
  "Y",
  "Z"
];

const String other = "#";

const List<String> gridData = [other, ...alphabetical];

List<ITile> datatiles = [
  ITile(TileSize.S, GridPosition(x: 0, y: 0), 0),
  ITile(TileSize.S, GridPosition(x: 1, y: 0), 1),
  ITile(TileSize.S, GridPosition(x: 0, y: 1), 2),
  ITile(TileSize.S, GridPosition(x: 1, y: 1), 3),
  ITile(TileSize.M, GridPosition(x: 2, y: 0), 4),
  ITile(TileSize.M, GridPosition(x: 4, y: 0), 5),
  ITile(TileSize.M, GridPosition(x: 0, y: 2), 6),
  ITile(TileSize.L, GridPosition(x: 2, y: 2), 7),
  ITile(TileSize.L, GridPosition(x: 0, y: 4), 8),
  ITile(TileSize.M, GridPosition(x: 4, y: 4), 9),
  ITile(TileSize.L, GridPosition(x: 0, y: 6), 10),
  ITile(TileSize.M, GridPosition(x: 4, y: 6), 11),
  ITile(TileSize.M, GridPosition(x: 0, y: 8), 12),
  ITile(TileSize.M, GridPosition(x: 2, y: 8), 13),
  ITile(TileSize.M, GridPosition(x: 4, y: 8), 14),
  ITile(TileSize.M, GridPosition(x: 2, y: 0), 15),
  ITile(TileSize.M, GridPosition(x: 4, y: 0), 16),
  ITile(TileSize.M, GridPosition(x: 0, y: 2), 17),
  ITile(TileSize.L, GridPosition(x: 0, y: 4), 18),
  ITile(TileSize.M, GridPosition(x: 4, y: 4), 19),
  ITile(TileSize.L, GridPosition(x: 0, y: 6), 20),
  ITile(TileSize.M, GridPosition(x: 4, y: 6), 21),
  ITile(TileSize.M, GridPosition(x: 0, y: 8), 22),
  ITile(TileSize.M, GridPosition(x: 2, y: 8), 23),
  ITile(TileSize.S, GridPosition(x: 0, y: 0), 25),
  ITile(TileSize.S, GridPosition(x: 1, y: 0), 26),
  ITile(TileSize.S, GridPosition(x: 0, y: 1), 27),
  ITile(TileSize.S, GridPosition(x: 1, y: 1), 28),
];
